% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FMR_Surv_MLE.R
\name{fmrs.mle}
\alias{fmrs.mle}
\title{Maximum Likelihood Estimation in Finite Mixture of Accelerated Failure Time Regression Models
and Finite Mixture of Regression Models}
\usage{
fmrs.mle(y, x, delta, nComp, disFamily = "lnorm", initCoeff, initSigma,
  initPi, lambRidge = 0, nIterEM = 2000, nIterNR = 2, conveps = 1e-08,
  convepsEM = 1e-08, convepsNR = 1e-08, porNR = 2)
}
\arguments{
\item{y}{Responses (observations)}

\item{x}{Design matrix (covariates)}

\item{delta}{Censoring indicator vector}

\item{nComp}{Order (Number of components) of mixture model}

\item{disFamily}{Specify sub-distributions family. The options are \code{"norm"} for FMR models,
\code{"lnorm"} for mixture of AFT regression models with Log-Normal sub-distributions,
\code{"weibull"} for mixture of AFT regression models with Weibull sub-distributions,}

\item{initCoeff}{Vector of initial values for regression coefficients including intercepts}

\item{initSigma}{Vector of initial values for standard deviations}

\item{initPi}{Vector of initial values for proportion of components}

\item{lambRidge}{A positive value for Lambda in Ridge regression or Elastic Net}

\item{nIterEM}{Maximum number of iterations for EM algorithm}

\item{nIterNR}{Maximum number of iterations for Newton-Raphson algorithm}

\item{conveps}{A positive value for avoiding NaN in computing divisions}

\item{convepsEM}{A positive value for treshold of convergence in EM algorithm}

\item{convepsNR}{A positive value for treshold of convergence in Newton-Raphson algorithm}

\item{porNR}{Used in pow(0.5, porNR) for tuning the increment in Newton-Raphson algorithm.}
}
\value{
An \code{\link{fmrs.fit}} object which includes parameter estimates of an FMRs model
}
\description{
It provides parameter estimation for Finite Mixture of Accelerated Failure Time Regression Models and Finite Mixture of Regression Models.
It also provide Ridge Regression.
}
\examples{
set.seed(1980)
nComp = 2
nCov = 10
n = 500
REP = 500
sigma = c(1, 1)
pi = c(0.4, 0.6)
rho = 0.5
coeff1 = c( 2,  2, -1, -2, 1, 2, 0, 0,  0, 0,  0)
coeff2 = c(-1, -1,  1,  2, 0, 0, 0, 0, -1, 2, -2)
umax = 40

dat <- fmrs.gen.data(n = n, nComp = nComp, nCov = nCov,
                     coeff = c(coeff1, coeff2), sigma = sigma,
                     pi = pi, rho = rho, umax = umax, disFamily = "lnorm")

res.mle <- fmrs.mle(y = dat$y, x = dat$x, delta = dat$delta,
                    nComp = nComp, disFamily = "lnorm",
                    initCoeff = rnorm(nComp*nCov+nComp),
                    initSigma = rep(1, nComp),
                    initPi = rep(1/nComp, nComp))

res.mle$coefficients
res.mle$sigma
res.mle$pi
}
\author{
Farhad Shokoohi <shokoohi@icloud.com>
}
\references{
Shokoohi, F., Khalili, A., Asgharian, M. and Lin, S. (2016 submitted) Variable Selection in Mixture of Survival Models
}
\seealso{
Other lnorm..norm..weibull: \code{\link{fmrs.gen.data}},
  \code{\link{fmrs.tunsel}}, \code{\link{fmrs.varsel}}
}
\keyword{AFT,}
\keyword{Algorithm,}
\keyword{Censored}
\keyword{Data,}
\keyword{EM}
\keyword{FMR,}
\keyword{Regression}
\keyword{Ridge}

